'use client';

import { createContext, useContext, useState } from 'react';

// Define the categories and options
export const categories = {
  world: {
    name: 'Мир',
    options: [
      { 
        id: 'silvarum_sapphiris', 
        name: 'Silvarum Sapphiris', 
        prompt: 'в Лесу из сапфиров, где деревья сияют как драгоценные камни',
        description: '«Сапфировый лес» – В этом древнем лесу деревья отражают свет как драгоценные камни. Сказания гласят, что ночью их листья наполняются магическим сиянием, освещая путь только тем, кто ищет истину.'
      },
      { 
        id: 'somniorum_promontorium', 
        name: 'Somniorum Promontorium', 
        prompt: 'на Мысе Грёз, где реальность и сновидения сливаются',
        description: '«Мыс Грёз» – Этот полуостров укрыт вечным туманом, сквозь который можно увидеть призрачные обрывки будущего. Здесь реальность и мечты переплетаются, оставляя в сердце путешественника ощущение неестественности.'
      },
      { 
        id: 'vallis_amarantina', 
        name: 'Vallis Amarantina', 
        prompt: 'в Амарантовой Долине, где цветы никогда не увядают',
        description: '«Амарантовая Долина» – Легенды гласят, что цветы, растущие в этой долине, никогда не увядают, словно отражая чувства тех, кто ими любуется. Здесь шепчут голоса прошлого, а ветер несёт истории неразделённых судеб.'
      },
      { 
        id: 'astropetalum_insulae', 
        name: 'Astropetalum Insulae', 
        prompt: 'в Небесных Звездных Садах, где парящие острова окутаны светом звёзд',
        description: '«Небесные Звездные Сады» – Эти парящие острова окутаны мягким светом ночных звёзд. Листья на деревьях растущих здесь светятся, словно сами впитали в себя свет далёких галактик, и, говорят, если загадать делание под их кроной, оно исполнится.'
      },
      { 
        id: 'oasis_serenitatis', 
        name: 'Oasis Serenitatis', 
        prompt: 'в Оазисе Покоя, где исчезает вся тревога',
        description: '«Оазис Покоя» – Среди бескрайних песков этот оазис – единственное место, где можно восстановить свои силы, пребывая в объятьях магического тумана. Здесь исчезает вся тревога, а водная гладь может излечить душу.'
      },
      { 
        id: 'castellum_oblivionis', 
        name: 'Castellum Oblivionis', 
        prompt: 'в Замке Забвения, где прошлое уступает место будущему',
        description: '«Замок Забвения» – Руины этого замка скрыты за завесой времени. Те, кто переступает его порог, начинают забывать своё прошлое, но в его залах спрятаны воспоминания тех, кто когда-то любил, терял и мечтал.'
      },
      { 
        id: 'fons_mystica', 
        name: 'Fons Mystica', 
        prompt: 'у Таинственного Источника, отражающего самую сокровенную истину',
        description: '«Таинственный Источник» – Глубоко под землёй скрывается источник, вода которого отражает небо, даже если его никто не видит. Говорят, что каждый, кто пьёт из него, видит свою самую сокровенную истину.'
      }
    ]
  },
  character: {
    name: 'Персонаж',
    options: [
      { 
        id: 'paladina_lux', 
        name: 'Paladina Lux', 
        prompt: 'как Паладин Света, чья броня сияет в бою',
        description: '«Паладин Света» – (человек) – С детства она росла в стенах ордена, будучи единственным ребёнком королевства, которого Священный Меч выбрал в столь юном возрасте. Теперь её броня сияет, когда она вступает в бой, а голос возвещает приговор тем, кто восстал против справедливости.'
      },
      { 
        id: 'shizuka_kage', 
        name: 'Shizuka Kage', 
        prompt: 'как Тихая Тень, искусная куноити, скрывающаяся в ночи',
        description: '«Тихая Тень» – (хэгнэёкаи) – В мире, где имя – это слабость, её называют лишь шёпотом. Искусная куноити, она скрывается в ночи, разя врагов меткими ударами. Легенда гласит, что она ищет того, кто разрушил её клан, но, возможно, сама уже стала легендой.'
      },
      { 
        id: 'astralis_soror', 
        name: 'Astralis Soror', 
        prompt: 'как Звёздная Колдунья, в чьих венах течёт пыль космоса',
        description: '«Звёздная Колдунья» – (раса неизвестна) – Говорят, она родилась в момент, когда угасла ярчайшая звезда неба, и теперь она владеет её силой. Она видит вселенную такой, какой никто не может её понять, а её магия таинственна недостижима, как далёкие галактики.'
      },
      { 
        id: 'lyselle_valmire', 
        name: 'Lyselle Valmire', 
        prompt: 'как Фехтовальщица Заката, чьи движения точны словно стихи',
        description: '«Фехтовальщица Заката» – (полуэльф) – Ее движения точны, словно стихи, а её клинок – продолжение её тела. Она отказалась от балов и развлечений, предпочтя их суровой дисциплине, и теперь её имя звучит в каждом дуэлянтском поединке, где грация сливается со смертельной точностью.'
      },
      { 
        id: 'serapha_ignis', 
        name: 'Serapha Ignistro', 
        prompt: 'как Жрица Пламени, чья душа разрывается между тьмой и светом',
        description: '«Жрица Пламени» – (полудемон) – Её глаза – как пылающий закат, а душа разрывается между тьмой наследия и светом нового мира. Она несёт огонь не как разрушение, а как очищение, но проклятье крови заставляет её сражаться не только с врагами, но и с самой собой.'
      },
      { 
        id: 'sylveris_lumea', 
        name: 'Sylveris Lumea', 
        prompt: 'как Целительница Дикой рощи, слышащая шёпот лесов и рек',
        description: '«Целительница Дикой рощи» – (друид) – Её прикосновение исцеляет, но оно же может пробудить гнев самой природы. Она слышит голоса лесов и рек, чувствует боль земли и направляет её гнев на тех, кто не чтит баланс мира.'
      },
      { 
        id: 'veyrith_draknir', 
        name: 'Veyrith Drak\'nir', 
        prompt: 'как Заклинательница Рун, чья кожа испещрена древними символами',
        description: '«Заклинательница Рун» – (драконид) – Дочь великих древних драконов, что давным давно выбрали жить как люди. Она не пишет заклинания – она есть заклинание, и когда она говорит, любой предмет закаляется частичкой её силы.'
      },
      { 
        id: 'morgath_vehris', 
        name: 'Morgath Vehris', 
        prompt: 'как Оракул Кровавой Луны, видящая будущее',
        description: '«Оракул Кровавой Луны» – (высший вампир) – Она видит будущее, но её пророчества всегда требуют цену. Одни считают её проклятием, другие – последней надеждой, ведь лишь она знает, как тьма поглотит этот мир… и сможет ли он найти спасение.'
      }
    ]
  },
  gift: {
    name: 'Дар (предмет)',
    options: [
      { 
        id: 'velae_lunae', 
        name: 'Velae Lunae', 
        prompt: 'с Вуалью Лунного Света, позволяющей видеть сквозь иллюзии',
        description: '«Вуаль Лунного Света» – Эта тончайшая ткань, сотканная из лунных лучей, мерцает в темноте, позволяя своей владелице видеть сквозь иллюзии и обманы. Те, кто носят её, могут ходить по теням, исчезая из глаз смертных.'
      },
      { 
        id: 'torques_manae', 
        name: 'Torques Manae', 
        prompt: 'с Ожерельем Маны, наполненным живой энергией',
        description: '«Ожерелье Маны» – В центре украшения пульсирует перламутровый камень, наполненный живой энергией. Оно восстанавливает магическую силу своей носительницы, но может поглощать радость, если использовать слишком часто.'
      },
      { 
        id: 'monile_flore_veris', 
        name: 'Monile Flore Veris', 
        prompt: 'с Ожерельем Цветущей Весны, шепчущим тайны природы',
        description: '«Кулон Цветущей Весны» – Это украшение расцветает на теле владелицы, ускоряя её регенерацию и позволяя управлять растениями. Говорят, что его лепестки шепчут тайны природы, если к ним прислушаться.'
      },
      { 
        id: 'ensis_aurorae', 
        name: 'Ensis Aurorae', 
        prompt: 'с Клинком Рассвета, вспыхивающим золотым огнём',
        description: '«Клинок Рассвета» – С первыми лучами этот меч наполняется силой света, его лезвие вспыхивает золотым огнём. Обычный клинок в ночи, но днём способен разить врагов магией самого Солнца.'
      },
      { 
        id: 'baculus_nebulae_stellaris', 
        name: 'Baculus Nebulae Stellaris', 
        prompt: 'с Посохом Звездной Мглы, шепчущим тайны мироздания',
        description: '«Посох Звездной Мглы» – Внутри него заключена частица ночного неба, оно раскрывает своему владельцу забытые тайны мироздания.'
      },
      { 
        id: 'oculus_fati', 
        name: 'Oculus Fati', 
        prompt: 'с Оком Судьбы, позволяющим заглянуть в будущее',
        description: '«Око Судьбы» – В центре этого амулета мерцает крошечный вихрь песчинок времени. Надев его, можно остановить время на несколько секунд, но если злоупотреблять им, тонкая грань времени может нарушиться.'
      },
      { 
        id: 'opalus_silvaticus', 
        name: 'Opalus Silvaticus', 
        prompt: 'с Лесным Опалом, позволяющим понимать язык животных',
        description: '«Лесной Опал» – Камень, позволяющий понимать язык животных. Те, кто носят его, обретают связь с духами леса… но порой слышат вещи, которых знать не должны.'
      },
      { 
        id: 'lacrimae_stellas', 
        name: 'Lacrimae Stellas', 
        prompt: 'со Слезами Звёзд, дарующими знание ценой воспоминаний',
        description: '«Слёзы Звёзд» – Эти крошечные кристаллы падают с небес раз в тысячу лет. Если их растворить в воде и выпить, можно получить желаемое знание, но цена этого – забыть самое дорогое воспоминание.'
      },
      { 
        id: 'corona_noctis', 
        name: 'Corona Noctis', 
        prompt: 'с Короной Ночи, позволяющей видеть сокрытое',
        description: '«Корона Ночи» – Этот венец, украшенный осколками тьмы, позволяет своей владелице видеть то, что сокрыто от глаз других.'
      },
      { 
        id: 'lilium_ignis', 
        name: 'Lilium Ignis', 
        prompt: 'с Огненной Лилией, чей огонь никогда не гаснет',
        description: '«Брошь Огненная Лилия» – Цветок лилии, чей огонь никогда не гаснет, но и не обжигает свою владелицу. Согревает во время холодов и дает защиту от злого умысла.'
      }
    ]
  },
  ability: {
    name: 'Способность',
    options: [
      { 
        id: 'praevisio', 
        name: 'Praevisio', 
        prompt: 'даром Предвидения, позволяющим заглядывать в будущее',
        description: '«Предвидение» – Обладатель этой способности способен заглядывать в будущее на несколько секунд.'
      },
      { 
        id: 'vox_imperii', 
        name: 'Vox Imperii', 
        prompt: 'Даром Убеждения, чей голос обладает гипнотической силой',
        description: '«Дар Убеждения» – Золотой мягкий голос носителя этой способности обладает гипнотической силой, заставляя других соглашаться с ним или даже подчиняться приказам.'
      },
      { 
        id: 'umbrae_amplexus', 
        name: 'Umbrae Amplexus', 
        prompt: 'способностью Покорения Теней, создавая из своей тени полноценную копию',
        description: '«Покорение Теней» – Дар позволяет создавать из своей тени полноценную копию себя, но эффект непродолжителен и затем тень возвращается к владельцу.'
      },
      { 
        id: 'manus_vitalis', 
        name: 'Manus Vitalis', 
        prompt: 'Объятие Жизни, ускоряющим естественную регенерацию',
        description: '«Объятие Жизни» – Этот дар позволяет ускорять естественную регенерацию и спасать жизнь находящуюся на волоске от смерти, однако оно не способно лечить самого владельца.'
      },
      { 
        id: 'anima_ignis', 
        name: 'Anima Ignis', 
        prompt: 'Душой Пламени, позволяющей управлять огнем без заклинаний',
        description: '«Душа Пламени» – Обладатель этой силы носит в себе частицу живого огня, которая позволяет управлять пламенем без заклинаний, а так же контролировать "эмоции огня".'
      },
      { 
        id: 'cordis_echo', 
        name: 'Cordis Echo', 
        prompt: 'Отголоском Сердца, позволяющим чувствовать истинные эмоции других',
        description: '«Отголосок Сердца» – Эта способность позволяет чувствовать истинные желания и намерения других людей, даже если они пытаются скрыть их.'
      },
      { 
        id: 'tempus_fugit', 
        name: 'Tempus Fugit', 
        prompt: 'даром Метаморфозы, позволяющим принимать желаемый облик',
        description: '«Метаморфоза» – Обладатель этой силы способен принять желаемый облик, но важно не забывать себя.'
      },
      { 
        id: 'sanguinem_pactum', 
        name: 'Sanguinem Pactum', 
        prompt: 'Кровавой Клятвой, позволяющей заключать нерушимые договоры',
        description: '«Кровавая Клятва» – Эта способность позволяет заключать нерушимые договоры, скреплённые кровью. Когда обещание не может быть нарушено..'
      },
      { 
        id: 'oculus_tenebrarum', 
        name: 'Oculus Tenebrarum', 
        prompt: 'Глазами Метиды, запоминающими каждую деталь навсегда',
        description: '«Глаза Метиды» – Эти глаза способны запоминать всё увиденное, каждую деталь, навсегда.'
      },
      { 
        id: 'resonantia_stellaris', 
        name: 'Resonantia Stellaris', 
        prompt: 'Резонансом жизни, направляющим судьбу в благоприятное русло',
        description: '«Резонанс жизни» – Этот дар позволяет направлять свою судьбу в благоприятное русло, но делает это незаметно для носителя.'
      }
    ]
  },
  companion: {
    name: 'Компаньон (животное)',
    options: [
      { 
        id: 'lunaria', 
        name: 'Lunaria', 
        prompt: 'в сопровождении Лунной Феи, освещающей тьму своим сиянием',
        description: 'Лунная Фея – Маленькое, почти эфемерное существо с серебристыми крыльями, испускающее мягкое сияние. Она освещает тьму и подсказывает верное направление в самых запутанных местах.'
      },
      { 
        id: 'flamnis', 
        name: 'Flamnis', 
        prompt: 'с Огненным Дракончиком, способным превращаться в огненный шар',
        description: 'Огненный Дракончик – Этот карликовый дракон с пламенными крыльями, способен становиться живым огнём, в жаре которого можно ковать легендарные предметы.'
      },
      { 
        id: 'umbro', 
        name: 'Umbro', 
        prompt: 'с Теневым Котом, обладающим телепатической связью',
        description: 'Теневой Кот – Гладкая, бархатная тень в форме кота, он обладает телепатической связью с хозяином и может переносить его в любое место в пределах большого, но ограниченного пространства.'
      },
      { 
        id: 'sylviris', 
        name: 'Syvhiris', 
        prompt: 'с Ветряным Духом, помогающим двигаться быстрее',
        description: 'Ветряной Дух – Невидимая сущность, её присутствие ощущается лёгким дуновением. Она помогает своему спутнику двигаться быстрее, смягчает падения и может даже предостерегать о грядущей опасности.'
      },
      { 
        id: 'nymphora', 
        name: 'Nymphora', 
        prompt: 'с Водной Сиреной, позволяющей дышать под водой',
        description: 'Водная Сирена – Небольшое водное создание, способное менять форму, переливаясь, как капля чистейшей росы. Она позволяет своему спутнику дышать под водой и восстанавливает силы, а так же замедляет старение.'
      },
      { 
        id: 'electrum', 
        name: 'Electrum', 
        prompt: 'с Золотой Змейкой, приносящей богатство и успех',
        description: 'Золотая Змейка – Эта крошечная неядовитая змейка обвивается вокруг руки и делает владельца богатым и успешным в любом деле, но иногда кусается (больно).'
      },
      { 
        id: 'stellamo', 
        name: 'Stellamo', 
        prompt: 'с Ночным Мотыльком, направляющим к источнику света',
        description: 'Ночной Мотылёк – Дух что появляется в ночи. Способен направлять владельца к источнику "Света". Что есть свет для каждого из нас?'
      },
      { 
        id: 'flora', 
        name: 'Flora', 
        prompt: 'с Цветочной Лисой, позволяющей общаться с животными',
        description: 'Цветочная Лиса – Очаровательное существо с цветами и лозами вместо шерсти. Она позволяет перевоплощаться в любое животное реальное или мифическое, живое или вымершее.'
      },
      { 
        id: 'noctifera', 
        name: 'Noctifera', 
        prompt: 'с Полуночной Вороной, позволяющей общаться с духами',
        description: 'Полуночная Ворона – Обсидиановая ворона, её крылья отливают холодным светом луны. Её присутствие позволяет видеть и общаться с духами, которые не прочь рассказать свои истории и тайны.'
      }
    ]
  }
};

// Create the context
const SelectionContext = createContext();

export function SelectionProvider({ children }) {
  const [selections, setSelections] = useState({
    world: null,
    character: null,
    gift: null,
    ability: null,
    companion: null,
  });

  const [currentCategory, setCurrentCategory] = useState('intro');
  const [prediction, setPrediction] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  // Update a selection
  const updateSelection = (category, option) => {
    setSelections(prev => ({
      ...prev,
      [category]: option
    }));
  };

  // Check if all selections are made
  const allSelectionsComplete = () => {
    return Object.values(selections).every(selection => selection !== null);
  };

  // Get the prompt for the LLM based on selections
  const getPrompt = () => {
    if (!allSelectionsComplete()) return '';

    return `Создай волшебное, позитивное и вдохновляющее предсказание-поздравление с 8 марта для женщины, которая ${selections.world.prompt} будет жить ${selections.character.prompt}, ${selections.gift.prompt}, ${selections.ability.prompt}, ${selections.companion.prompt}. Предсказание должно быть написано в стиле фэнтези, быть оптимистичным и содержать пожелания счастья, любви и успехов. Не упоминай, что это сгенерированный текст. Ограничь длину 150 словами.`;
  };

  // Move to the next category
  const nextCategory = () => {
    const categories = ['intro', 'world', 'character', 'gift', 'ability', 'companion', 'result'];
    const currentIndex = categories.indexOf(currentCategory);
    
    if (currentIndex < categories.length - 1) {
      setCurrentCategory(categories[currentIndex + 1]);
    }
  };

  // Generate prediction using the LLM API
  const generatePrediction = async () => {
    if (!allSelectionsComplete()) return;

    setIsLoading(true);
    try {
      const prompt = getPrompt();
      
      // Call our API route
      const response = await fetch('/api/generate-prediction', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });
      
      if (!response.ok) {
        throw new Error('Failed to generate prediction');
      }
      
      const data = await response.json();
      setPrediction(data.prediction);
    } catch (error) {
      console.error('Error generating prediction:', error);
      setPrediction('Произошла ошибка при создании предсказания. Пожалуйста, попробуйте еще раз.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <SelectionContext.Provider value={{
      selections,
      updateSelection,
      currentCategory,
      setCurrentCategory,
      nextCategory,
      allSelectionsComplete,
      generatePrediction,
      prediction,
      isLoading
    }}>
      {children}
    </SelectionContext.Provider>
  );
}

// Custom hook to use the context
export function useSelections() {
  const context = useContext(SelectionContext);
  if (context === undefined) {
    throw new Error('useSelections must be used within a SelectionProvider');
  }
  return context;
}
